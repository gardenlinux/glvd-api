name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  # Push container images
  packages: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:

    runs-on: ubuntu-24.04
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4

    - name: Build with Gradle Wrapper
      run: ./gradlew build asciidoctor

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: 'build'

  container-image:
    runs-on: ubuntu-24.04
    needs:
      - build
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64
    - name: Login to GitHub Container Registry
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: token
        password: ${{ github.token }}

    - run: mkdir -p build
    - uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: build
    - run: ./gradlew bootJar
    - run: docker buildx build --file=Containerfile --platform=linux/amd64,linux/arm64 --push
    # - run: podman build  --platform linux/amd64,linux/arm64 --manifest ghcr.io/gardenlinux/glvd-api:edge .
    # - run: podman login -u token -p ${{ github.token }} ghcr.io
    # - run: podman push ghcr.io/gardenlinux/glvd-api:edge
    # - run: podman push ghcr.io/gardenlinux/glvd-api:edge_bare

  dependency-submission:

    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4

  deploy-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-24.04
    needs:
      - build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/asciidoc'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

